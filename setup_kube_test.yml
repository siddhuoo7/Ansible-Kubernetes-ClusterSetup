---
- hosts: all
  tasks:
  - name: Disabling Swap on all nodes
    shell: swapoff -a
  - name: Creating a repository file for Kubernetes
    file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch
  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
     path: /etc/yum.repos.d/kubernetes.repo
     block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  - name: Installing Docker
    shell: |
     dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
     dnf install --nobest docker-ce -y
  - name: Disable firewalld
    shell: |
     systemctl disable firewalld
     systemctl stop firewalld
  - name: Enabling Bridge Firewall Rule
    shell: |
     modprobe br_netfilter
     echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
  - name: Installing kubeadm
    shell: yum install kubeadm -y
  - name: Starting and Enabling docker
    service:
     name: docker
     state: started
     enabled: yes
  - name: Starting and Enabling kubelet
    shell: |
     systemctl enable kubelet
     systemctl start kubelet
- hosts: all
  tasks:
  - name: Create docker daemon file
    copy: src=daemon.json dest=/etc/docker/daemon.json
  - name: Reloading docker daemon
    shell: |
     systemctl daemon-reload
     systemctl restart docker
  - name: Logging into docker nexus repository
    shell: docker login -u admin -p Ecssupport09 192.168.75.4:8082
- hosts: master-nodes
  tasks:
  - name: Entering try block
    block:
      - name: Initializing Kubernetes cluster
        shell: kubeadm init 
        register: output
      - name: Storing Logs and Generated token for future purpose.
        local_action: copy content={{ output.stdout }} dest=/bin/join_token
      - name: Copying required files
        shell: |
         mkdir -p $HOME/.kube
         sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
         sudo chown $(id -u):$(id -g) $HOME/.kube/config
      - name: Install Network Add-on
        shell: |
         export kubever=$(kubectl version | base64 | tr -d '\n')
         kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
    rescue:
      - name: Generating Kubernetes join command
        shell: kubeadm token create --print-join-command 
        register: output
      - name: Storing Logs and Generated token for future purpose.
        local_action: copy content={{ output.stdout }} dest=/bin/join_token
      - name: Copying required files
        shell: |
         mkdir -p $HOME/.kube
         sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
         sudo chown $(id -u):$(id -g) $HOME/.kube/config           
- hosts: worker-nodes
  tasks:
  - name: Copying token to worker nodes
    copy: src=/bin/join_token dest=/bin/join_token
  - name: Joining worker nodes with kubernetes master
    shell: |
     cat /bin/join_token | tail -2 > out.sh
     sh out.sh
