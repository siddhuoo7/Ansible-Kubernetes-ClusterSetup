---
- hosts: all
  tasks:
  - name: Install dnf
    shell: sudo yum install dnf dnf-plugins-core -y
    ignore_errors: yes
  - name: Add IP address of all hosts to all hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ hostvars[item].ansible_host }} {{item}}"
      state: present
    when: hostvars[item].ansible_host is defined
    with_items: "{{ groups.all }}"
  - name: Disabling Swap on all nodes
    shell: sudo swapoff -a; sed -i '/swap/d' /etc/fstab
  - name: Set Hostname
    shell: hostnamectl set-hostname {{ inventory_hostname }}
  - name: Disable firewalld
    shell: |
     sudo systemctl disable firewalld
     sudo systemctl stop firewalld
  - name: Enabling Bridge Firewall Rule
    shell: |
     modprobe br_netfilter
     echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
  - name: Enable the usage of iptables
    shell: |
     cat >>/etc/sysctl.d/kubernetes.conf<<EOF
     net.bridge.bridge-nf-call-ip6tables = 1
     net.bridge.bridge-nf-call-iptables = 1
     EOF
     sysctl --system     
  - name: Installing Docker
    block:
      - name: Installing Docker
        shell: |
         sudo yum install -y yum-utils device-mapper-persistent-data lvm2
         sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
         sudo yum install -y docker-ce docker-ce-cli containerd.io
         #dnf install docker-ce -y
    rescue:
      - name: Reinstalling with dnf
        shell: |
         dnf -y upgrade
         #dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
         #dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
         #dnf install docker-ce -y --nobest
         sudo dnf install docker-ce-3:18.09.1-3.el7
         sudo systemctl enable --now docker
         sudo dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
         sudo dnf install docker-ce
  - name: Creating a repository file for Kubernetes
    file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch
  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
     path: /etc/yum.repos.d/kubernetes.repo
     block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  - name: Installing kubeadm
    shell: sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
  - name: Starting and Enabling docker
    service:
     name: docker
     state: started
     enabled: yes
  - name: Starting and Enabling kubelet
    shell: |
     sudo systemctl enable --now kubelet
     sudo systemctl start kubelet
- hosts: all
  tasks:
  - name: Create docker daemon file
    copy: src=daemon.json dest=/etc/docker/daemon.json
  - name: Reloading docker daemon
    shell: |
     sudo systemctl daemon-reload
     sudo systemctl restart docker
#  - name: Logging into docker nexus repository
#    shell: docker login -u admin -p Ecssupport09 192.168.75.4:8082
- hosts: master-nodes
  tasks:
  - name: Include vars
    include_vars: "config_var.yaml"
  - name: Initializing Kubernetes cluster
    shell: |
     sudo kubeadm config images pull
     sudo kubeadm init 
    when:
      - kube_network_plugin == "weave"
    shell: |
     sudo kubeadm config images pull
     kubeadm init --pod-network-cidr 10.244.0.0/16
    when: 
      - kube_network_plugin != "weave"
    register: output
  - name: Storing Logs and Generated token for future purpose.
    local_action: copy content={{ output.stdout }} dest=/bin/join_token
  - name: Copying required files
    shell: |
     mkdir -p $HOME/.kube
     sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
     sudo chown $(id -u):$(id -g) $HOME/.kube/config
  - name: "Cluster n/w "
    debug:
      msg: "The cluster network is {{ kube_network_plugin }}"        
  - name: Install Network Add-on
    shell: |
     export kubever=$(kubectl version | base64 | tr -d '\n')
     kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
    when:
      - kube_network_plugin == "weave"
    shell: |
      kubectl apply -f /root/database/operations/calico.yaml
      #kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml
    when:
      - kube_network_plugin == "calico"
    shell: |
      sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    when:
      - kube_network_plugin == "flannel"      
- hosts: worker-nodes
  tasks:
  - name: Copying token to worker nodes
    copy: src=/bin/join_token dest=/bin/join_token
  - name: Joining worker nodes with kubernetes master
    shell: |
     cat /bin/join_token | tail -2 > out.sh
     sh out.sh
